/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PayrollPackage;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.text.DecimalFormat;

/**
 *
 * @author Jherico
 */
public class Payroll extends javax.swing.JFrame {

    /**
     * Creates new form Payroll
     */
    public Payroll() {
        initComponents();
        setLocationRelativeTo(null);
        getContentPane().setBackground(new java.awt.Color(211, 211, 211));
        
         
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hpLabel = new javax.swing.JLabel();
        calculateButton = new javax.swing.JButton();
        totalLabel = new javax.swing.JLabel();
        insuranceTextfield = new javax.swing.JTextField();
        SSStextField = new javax.swing.JTextField();
        HPtextField = new javax.swing.JTextField();
        TotalLabel = new javax.swing.JLabel();
        otLabel = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        OTtextField = new javax.swing.JTextField();
        fullNameTextField = new javax.swing.JTextField();
        posTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        numOfDaysTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        RPHtextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        positionLabel = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lateTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Payroll");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(153, 153, 153));
        setForeground(new java.awt.Color(153, 153, 153));
        setResizable(false);

        hpLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        hpLabel.setText("PAG-IBIG");

        calculateButton.setBackground(new java.awt.Color(102, 102, 102));
        calculateButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        calculateButton.setForeground(new java.awt.Color(255, 255, 255));
        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        totalLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        totalLabel.setText("Total Pay: ");

        insuranceTextfield.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        insuranceTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                insuranceTextfieldKeyTyped(evt);
            }
        });

        SSStextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        SSStextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SSStextFieldKeyTyped(evt);
            }
        });

        HPtextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        HPtextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HPtextFieldKeyTyped(evt);
            }
        });

        TotalLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N

        otLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        otLabel.setText("Overtime (in hrs)");

        idTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        idTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextFieldActionPerformed(evt);
            }
        });
        idTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idTextFieldKeyTyped(evt);
            }
        });

        OTtextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        OTtextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OTtextFieldActionPerformed(evt);
            }
        });
        OTtextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OTtextFieldKeyTyped(evt);
            }
        });

        fullNameTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        fullNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullNameTextFieldActionPerformed(evt);
            }
        });
        fullNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fullNameTextFieldKeyTyped(evt);
            }
        });

        posTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        posTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posTextFieldActionPerformed(evt);
            }
        });
        posTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                posTextFieldKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel2.setText("No. Of Days");

        numOfDaysTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        numOfDaysTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numOfDaysTextFieldActionPerformed(evt);
            }
        });
        numOfDaysTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numOfDaysTextFieldKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel3.setText("Rate per Hour");

        RPHtextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        RPHtextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RPHtextFieldActionPerformed(evt);
            }
        });
        RPHtextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RPHtextFieldKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Deductions");

        jLabel1.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jLabel1.setText("Payroll of Employee");

        idLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        idLabel.setText("ID Number : ");

        nameLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        nameLabel.setText("Full Name :");

        positionLabel.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        positionLabel.setText("Position :");

        printButton.setBackground(new java.awt.Color(102, 255, 102));
        printButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        printButton.setForeground(new java.awt.Color(255, 255, 255));
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(102, 153, 255));
        saveButton.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel5.setText("Insurance:");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel6.setText("SSS:");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel7.setText("Late (in hrs)");

        lateTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lateTextFieldKeyTyped(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(394, 394, 394)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hpLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(HPtextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(idLabel)
                                            .addComponent(nameLabel)
                                            .addComponent(positionLabel)
                                            .addComponent(jLabel2))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(37, 37, 37)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(idTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                                    .addComponent(fullNameTextField)
                                                    .addComponent(posTextField)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(numOfDaysTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(11, 11, 11)
                                                .addComponent(otLabel))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(237, 237, 237)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(10, 10, 10)
                                        .addComponent(RPHtextField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(131, 131, 131)
                                        .addComponent(OTtextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(insuranceTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(jLabel6))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(totalLabel)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(TotalLabel))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(SSStextField, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                            .addComponent(lateTextField)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(16, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(fullNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positionLabel)
                    .addComponent(posTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OTtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(otLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(numOfDaysTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(RPHtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(hpLabel)
                    .addComponent(insuranceTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SSStextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HPtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(totalLabel)
                                    .addComponent(TotalLabel))
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(saveButton)
                                .addComponent(printButton)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(342, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(192, 192, 192)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fullNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullNameTextFieldActionPerformed

    private void posTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_posTextFieldActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
       
        if( TotalLabel.getText().trim().isEmpty()){
          JOptionPane.showMessageDialog(this, "Calculate first before printing", "Warning", JOptionPane.ERROR_MESSAGE);
            return;  
        }
        
        if(idTextField.getText().trim().isEmpty() || fullNameTextField.getText().trim().isEmpty() || posTextField.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Text Fields Cannot be Empty", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.setVisible(false);  
        
        double myLates = RPHtextField.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(RPHtextField.getText().trim());
        double lateInHours = lateTextField.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(lateTextField.getText().trim());
        
        double finalDeduction = myLates * lateInHours;
        double DInsurance = insuranceTextfield.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(insuranceTextfield.getText().trim());
        double Dsss = SSStextField.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(SSStextField.getText().trim());
        double Dpagibig = HPtextField.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(HPtextField.getText().trim());
        
        double totalDeduction = finalDeduction + DInsurance + Dsss + Dpagibig;
        
        String employeeID = idTextField.getText().trim();
        String employeeName = fullNameTextField.getText().trim();
        String myPosition = posTextField.getText().trim();
        String myInsurance = insuranceTextfield.getText().trim();
        String mySSS = SSStextField.getText().trim();
        String lates = lateTextField.getText().trim();
        String pagibig = HPtextField.getText().trim();
        String myTotal = TotalLabel.getText().trim();
        String mySalary = TotalLabel.getText().trim();
        
    javax.swing.JFrame receiptFrame = new javax.swing.JFrame("Payroll Receipt");
    PrintForm printPanel = new PrintForm(employeeID, employeeName, myPosition, myInsurance, mySSS, lates, finalDeduction, pagibig, myTotal, totalDeduction, mySalary); 

    receiptFrame.setResizable(false);
    receiptFrame.setExtendedState(JFrame.NORMAL);
    receiptFrame.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE); 
    receiptFrame.getContentPane().add(printPanel);  
    receiptFrame.pack();  
    receiptFrame.setLocationRelativeTo(null);
    receiptFrame.setVisible(true);
    

    receiptFrame.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosed(java.awt.event.WindowEvent e) {
            Payroll.this.dispose(); 
        }
    });
    
    
    
    }//GEN-LAST:event_printButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        if( TotalLabel.getText().trim().isEmpty()){
          JOptionPane.showMessageDialog(this, "Calculate first before saving", "Warning", JOptionPane.ERROR_MESSAGE);
            return;  
        }
        
        if(idTextField.getText().trim().isEmpty() || fullNameTextField.getText().trim().isEmpty() || posTextField.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Text Fields Cannot be Empty", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Payroll.this.dispose();
        
        String employeeID = idTextField.getText().trim();
        String employeeName = fullNameTextField.getText().trim();
        String myPosition = posTextField.getText().trim();
        String mySalary = TotalLabel.getText().trim();
        
        javax.swing.JFrame saveForm = new javax.swing.JFrame("");
        SaveForm formPanel = new SaveForm(employeeID, employeeName, myPosition, mySalary);
        
        saveForm.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
        saveForm.getContentPane().add(formPanel);  
        saveForm.pack();  
        saveForm.setLocationRelativeTo(null);
        saveForm.setVisible(true);
        
        
        saveForm.addWindowListener(new java.awt.event.WindowAdapter(){
            @Override
            
            public void windowClosed(java.awt.event.WindowEvent e) {
            Payroll.this.dispose(); 
        }
            
        });
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void idTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextFieldKeyTyped
         char c = evt.getKeyChar();
         
         if (!Character.isDigit(c) || idTextField.getText().length()>=10) {
         evt.consume();
         }
    }//GEN-LAST:event_idTextFieldKeyTyped

    private void idTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idTextFieldActionPerformed

    private void fullNameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fullNameTextFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isLetter(c) && c != ' ') { 
        evt.consume();
    }
    }//GEN-LAST:event_fullNameTextFieldKeyTyped

    private void numOfDaysTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numOfDaysTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numOfDaysTextFieldActionPerformed

    private void numOfDaysTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numOfDaysTextFieldKeyTyped
        char c = evt.getKeyChar();
        
        String text = numOfDaysTextField.getText();
        
        if(text.length()>= 10){
            evt.consume();
            return;
        }
        
         if (!Character.isDigit(c)) {
         evt.consume();
         }
    }//GEN-LAST:event_numOfDaysTextFieldKeyTyped

    private void RPHtextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RPHtextFieldKeyTyped
     char c = evt.getKeyChar();
    String text = RPHtextField.getText(); 
    
    if (text.length() >= 10) {
        evt.consume();
        return;
    }

    // Allow only numbers and one decimal point
    if (!Character.isDigit(c) && c != '.') { 
        evt.consume();
        return;
    }

    // Ensure only one decimal point is allowed
    if (c == '.' && text.contains(".")) {
        evt.consume(); // Ignore additional decimal points
        }
    }//GEN-LAST:event_RPHtextFieldKeyTyped

    private void OTtextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OTtextFieldKeyTyped
         char c = evt.getKeyChar();
         String text = OTtextField.getText(); // Get current text
    
    // Prevent input if already at 5 digits
    if (text.length() >= 5) {
        evt.consume();
        return;
        
    }

    // Allow only numeric input (0-9)
    if (!Character.isDigit(c)) { 
        evt.consume();
    }
    }//GEN-LAST:event_OTtextFieldKeyTyped

    private void insuranceTextfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_insuranceTextfieldKeyTyped
       char c = evt.getKeyChar();
    String text = insuranceTextfield.getText(); // Use the correct text field
    
    // Prevent input if already at 10 characters
    if (text.length() >= 10) {
        evt.consume();
        return;
    }

    // Allow only numbers and one decimal point
    if (!Character.isDigit(c) && c != '.') { 
        evt.consume();
        return;
    }

    // Ensure only one decimal point is allowed
    if (c == '.' && text.contains(".")) {
        evt.consume(); // Ignore additional decimal points
        }
    }//GEN-LAST:event_insuranceTextfieldKeyTyped

    private void SSStextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SSStextFieldKeyTyped
        char c = evt.getKeyChar();
    String text = SSStextField.getText(); // Use the correct text field
    
    // Prevent input if already at 10 characters
    if (text.length() >= 10) {
        evt.consume();
        return;
    }

    // Allow only numbers and one decimal point
    if (!Character.isDigit(c) && c != '.') { 
        evt.consume();
        return;
    }

    // Ensure only one decimal point is allowed
    if (c == '.' && text.contains(".")) {
        evt.consume(); // Ignore additional decimal points
        }
    }//GEN-LAST:event_SSStextFieldKeyTyped

    private void HPtextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HPtextFieldKeyTyped
        char c = evt.getKeyChar();
    String text = HPtextField.getText(); // Use the correct text field
    
    // Prevent input if already at 10 characters
    if (text.length() >= 10) {
        evt.consume();
        return;
    }

    // Allow only numbers and one decimal point
    if (!Character.isDigit(c) && c != '.') { 
        evt.consume();
        return;
    }

    // Ensure only one decimal point is allowed
    if (c == '.' && text.contains(".")) {
        evt.consume(); // Ignore additional decimal points
        }
    }//GEN-LAST:event_HPtextFieldKeyTyped

    private void OTtextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OTtextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OTtextFieldActionPerformed

    private void lateTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lateTextFieldKeyTyped
        char c = evt.getKeyChar();
         String text = lateTextField.getText(); // Get current text
    
    // prevent input at 5 digits
    if (text.length() >= 5) {
        evt.consume();
        return;
    }

    // Allow only numeric input (0-9)
    if (!Character.isDigit(c)) { 
        evt.consume();
    }
    }//GEN-LAST:event_lateTextFieldKeyTyped

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        
        if(idTextField.getText().trim().isEmpty() || fullNameTextField.getText().trim().isEmpty() || posTextField.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Text Fields Cannot be Empty", "Warning", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
    int numOfDays = Integer.parseInt(numOfDaysTextField.getText().trim());
    double ratePerHour = Double.parseDouble(RPHtextField.getText().trim());
    int overTime = OTtextField.getText().trim().isEmpty() ? 0 : Integer.parseInt(OTtextField.getText().trim());
    int lateHours = lateTextField.getText().trim().isEmpty() ? 0 : Integer.parseInt(lateTextField.getText().trim());
    

    // Allow optional deductions (default to 0 if empty)
    double insurance = insuranceTextfield.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(insuranceTextfield.getText().trim());
    double sss = SSStextField.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(SSStextField.getText().trim());
    double healthPlan = HPtextField.getText().trim().isEmpty() ? 0.0 : Double.parseDouble(HPtextField.getText().trim());
    

    // Compute earnings
    double regularPay = numOfDays * ratePerHour * 8;
    double overtimeRate = ratePerHour * 2.25;
    double overtimePay = overTime * overtimeRate;
    double totalEarnings = regularPay + overtimePay;

    // Compute late deduction
    double lateDeduction = lateHours * ratePerHour;
    
    // Compute deductions
    double totalDeductions = insurance + sss + healthPlan + lateDeduction;

    // Compute net salary
    double netSalary = totalEarnings - totalDeductions;

    // Show an error dialog if net salary is negative
    if (netSalary < 0) {
        JOptionPane.showMessageDialog(this, 
            "Error: Net pay cannot be negative!\nPlease check your inputs.", 
            "Calculation Error", 
            JOptionPane.ERROR_MESSAGE);
        return; // Stop further execution
    }

    
    DecimalFormat currencyFormat = new DecimalFormat("₱#,##0.00");
    TotalLabel.setText(currencyFormat.format(netSalary));

} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Please enter valid numbers!", "Input Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_calculateButtonActionPerformed

    private void RPHtextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RPHtextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RPHtextFieldActionPerformed

    private void posTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_posTextFieldKeyTyped
        
        String text = posTextField.getText();
        
        if(text.length() >= 20){
            evt.consume();
            return;
            
        }
        
    }//GEN-LAST:event_posTextFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payroll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Payroll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField HPtextField;
    private javax.swing.JTextField OTtextField;
    private javax.swing.JTextField RPHtextField;
    private javax.swing.JTextField SSStextField;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JButton calculateButton;
    private javax.swing.JTextField fullNameTextField;
    private javax.swing.JLabel hpLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JTextField insuranceTextfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField lateTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField numOfDaysTextField;
    private javax.swing.JLabel otLabel;
    private javax.swing.JTextField posTextField;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JButton printButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
